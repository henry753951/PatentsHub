name: Build and Release Windows Electron App

on:
   push:
      branches:
         - release
jobs:
   build-and-release:
      runs-on: windows-latest
      steps:
         - name: Checkout code
           uses: actions/checkout@v4
           with:
              fetch-depth: 0
              token: ${{ secrets.PERSONAL_GH_TOKEN }}

         - name: Install pnpm
           uses: pnpm/action-setup@v4

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: 20
              cache: "pnpm"

         - name: Install dependencies
           run: pnpm install

         - name: Setup semantic-release
           run: pnpm add semantic-release @semantic-release/github @semantic-release/exec semantic-release-gha-output

         - name: Get next version
           id: semantic-release-dry-run
           run: pnpm exec semantic-release --dry-run --no-ci
           env:
              GITHUB_TOKEN: ${{ secrets.PERSONAL_GH_TOKEN }}

         - name: Overwrite version in package.json
           run: |
              echo "Updating version in package.json to ${{ steps.semantic-release-dry-run.outputs.version }}"
              pnpm exec json5 -I -f package.json -e "this.version='${{ steps.semantic-release-dry-run.outputs.version }}'"

         - name: Build Nuxt
           run: pnpm run build

         - name: Build Electron App
           run: pnpm run build:app
           env:
              GITHUB_TOKEN: ${{ secrets.PERSONAL_GH_TOKEN }}

         - name: Run semantic-release
           id: semantic-release
           run: pnpm exec semantic-release
           env:
              GITHUB_TOKEN: ${{ secrets.PERSONAL_GH_TOKEN }}

         - name: Upload Artifact to Release
           uses: softprops/action-gh-release@v2
           with:
              files: .output/electron/*.exe
              tag_name: v${{ steps.semantic-release.outputs.version }}
              fail_on_unmatched_files: true
              token: ${{ secrets.PERSONAL_GH_TOKEN }}
