model Agency {
  AgencyID Int                   @id @default(autoincrement())
  Name     String
  contacts AgencyContactPerson[]
  patents  AgencyPatent[]
}

model AgencyPatent {
  PatentID Int
  AgencyID Int
  FileCode String
  Role     String
  Details  String?
  agency   Agency  @relation(fields: [AgencyID], references: [AgencyID])
  patent   Patent  @relation(fields: [PatentID], references: [PatentID])

  @@id([PatentID, AgencyID])
}

model AgencyContactPerson {
  ContactPersonID Int          @id @default(autoincrement())
  AgencyID        Int
  Position        String
  ContactInfoID   Int?         @unique
  contactInfo     ContactInfo? @relation("AgencyContact", fields: [ContactInfoID], references: [ContactInfoID])
  agency          Agency       @relation(fields: [AgencyID], references: [AgencyID])
}

model FundingPlan {
  PlanID   Int             @id @default(autoincrement())
  PlanType Int
  fundings PatentFunding[]
}

model PatentFunding {
  FundingID     Int         @id @default(autoincrement())
  PatentID      Int
  FundingAgency String
  ProjectNumber String
  PlanID        Int
  plan          FundingPlan @relation(fields: [PlanID], references: [PlanID])
  patent        Patent      @relation(fields: [PatentID], references: [PatentID])
}

model Inventor {
  InventorID    Int              @id @default(autoincrement())
  Name          String
  Department    Int
  Email         String?
  ContactInfoID Int?             @unique
  contactInfo   ContactInfo?     @relation("InventorContact", fields: [ContactInfoID], references: [ContactInfoID])
  department    Department       @relation(fields: [Department], references: [DepartmentID])
  patents       PatentInventor[]
}

model PatentInventor {
  PatentID   Int
  InventorID Int
  Main       Boolean
  inventor   Inventor @relation(fields: [InventorID], references: [InventorID])
  patent     Patent   @relation(fields: [PatentID], references: [PatentID])

  @@id([PatentID, InventorID])
}

model Patent {
  PatentID     Int                        @id @default(autoincrement())
  Year         String
  InternalID   String
  Title        String
  DepartmentID Int
  CollegeID    Int
  TitleEnglish String?
  agencies     AgencyPatent[]
  college      College                    @relation(fields: [CollegeID], references: [CollegeID])
  department   Department                 @relation(fields: [DepartmentID], references: [DepartmentID])
  application  PatentApplicationData?
  funding      PatentFunding[]
  inventors    PatentInventor[]
  status       PatentStatus?
  technical    PatentTechnicalAttributes?
}

model PatentStatus {
  PatentID                     Int       @id @default(autoincrement())
  ExpiryDate                   DateTime?
  Status                       String
  TechnicalCommitteeReviewDate DateTime?
  MaintenanceYear              Int?
  MaintenanceStartDate         DateTime?
  MaintenanceEndDate           DateTime?
  patent                       Patent    @relation(fields: [PatentID], references: [PatentID])
}

model PatentApplicationData {
  PatentID          Int       @id @default(autoincrement())
  CountryID         Int
  PatentNumber      String
  FilingDate        DateTime?
  GrantDate         DateTime?
  PatentType        String
  ApplicationNumber String
  patent            Patent    @relation(fields: [PatentID], references: [PatentID])
  country           Country   @relation(fields: [CountryID], references: [CountryID])
}

model PatentTechnicalAttributes {
  PatentID      Int    @id @default(autoincrement())
  IPC           String
  Scope         String
  MaturityLevel String
  Keywords      String
  patent        Patent @relation(fields: [PatentID], references: [PatentID])
}

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/client"
  previewFeatures = ["prismaSchemaFolder"]
}

generator zod {
  provider = "zod-prisma-types"
  output   = "../zod"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model College {
  CollegeID   Int          @id @default(autoincrement())
  Name        String
  Description String?
  departments Department[]
  patents     Patent[]
}

model Department {
  DepartmentID Int        @id @default(autoincrement())
  Name         String
  CollegeID    Int
  Description  String?
  college      College    @relation(fields: [CollegeID], references: [CollegeID])
  inventors    Inventor[]
  patents      Patent[]
}

model Country {
  CountryID    Int                     @id @default(autoincrement())
  CountryName  String
  ISOCode      String
  applications PatentApplicationData[]
}

model ContactInfo {
  ContactInfoID Int                  @id @default(autoincrement())
  Name          String
  Email         String
  OfficeNumber  String?
  PhoneNumber   String?
  Position      String?
  Note          String?
  agencyContact AgencyContactPerson? @relation("AgencyContact")
  inventor      Inventor?            @relation("InventorContact")
}
